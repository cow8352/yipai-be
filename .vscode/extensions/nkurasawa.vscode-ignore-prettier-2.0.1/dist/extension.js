(()=>{"use strict";var e={143:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EditService=void 0;const s=r(37),i=r(743);t.EditService=class{constructor(e,t){this.toggleStatusBarItem=e,this.vscode=t}async add(){const e=this.vscode.getOpenedFilename(),t=this.vscode.getPrettierignoreUri();let r="";await this.vscode.exists(t)&&(r=(await this.vscode.readFile(t)).trimEnd()+s.EOL);const i=r+e+s.EOL;this.vscode.writeFile(t,i),this.toggleStatusBarItem.disableStatusBarItemText()}async remove(){const e=this.vscode.getOpenedFilename(),t=this.vscode.getPrettierignoreUri();let r="";await this.vscode.exists(t)&&(r=(await this.vscode.readFile(t)).trimEnd()+s.EOL);const o=(0,i.removeFilename)(r,e);""===o.trim()?this.vscode.deleteFile(t):this.vscode.writeFile(t,o),this.toggleStatusBarItem.enableStatusBarItemText()}async toggle(){const e=this.vscode.getOpenedFilename(),t=this.vscode.getPrettierignoreUri();let r="";await this.vscode.exists(t)&&(r=(await this.vscode.readFile(t)).trimEnd()+s.EOL);let o="";r.includes(e)?(o=(0,i.removeFilename)(r,e),this.toggleStatusBarItem.enableStatusBarItemText()):(o=r+e+s.EOL,this.toggleStatusBarItem.disableStatusBarItemText()),""===o.trim()?this.vscode.deleteFile(t):this.vscode.writeFile(t,o)}}},519:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ToggleStatusBarItem=void 0;const s=r(37),i=r(17),o=r(496);t.ToggleStatusBarItem=class{constructor(){this.statusBarItem=o.window.createStatusBarItem(o.StatusBarAlignment.Right),this.statusBarItem.command="ignoreprettier.toggle",this.statusBarItem.tooltip="Add / Remove from .prettierignore"}async show(){await this.setText(),this.statusBarItem.show()}getItem(){return this.statusBarItem}disableStatusBarItemText(){this.statusBarItem.text="$(circle-slash) Toggle Prettier"}enableStatusBarItemText(){this.statusBarItem.text="$(check) Toggle Prettier"}async setText(){await this.isActive()?this.enableStatusBarItemText():this.disableStatusBarItemText()}async exists(e){try{await o.workspace.fs.stat(e)}catch(e){if(e instanceof o.FileSystemError&&"FileNotFound"===e.code)return!1;throw e}return!0}async isActive(){const e=o.workspace.workspaceFolders;if(void 0===e||e.length>1)return!1;const t=e[0];if(!o.window.activeTextEditor)return!1;const r=o.window.activeTextEditor.document.fileName.replace(`${t.uri.path}${i.sep}`,""),a=t.uri.with({path:i.posix.join(t.uri.path,".prettierignore")});let n="";if(await this.exists(a)){const e=await o.workspace.fs.readFile(a);n=Buffer.from(e).toString("utf8").trimEnd()+s.EOL}return!n.includes(r)}}},49:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.toggleFunc=t.removeFunc=t.addFunc=void 0;const s=r(143),i=r(370),o=()=>{let e;try{e=new i.Vscode}catch(e){return e instanceof Error&&console.error(`Error: ${e.message}`),null}return e};t.addFunc=e=>()=>{const t=o();null!==t&&new s.EditService(e,t).add()},t.removeFunc=e=>()=>{const t=o();null!==t&&new s.EditService(e,t).remove()},t.toggleFunc=e=>()=>{const t=o();null!==t&&new s.EditService(e,t).toggle()}},743:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.removeFilename=void 0,t.removeFilename=(e,t)=>{const s=r(t),i=new RegExp(`^${s}$[\\n|\\r|\\r\\n]?`,"gm");return e.replace(i,"")};const r=e=>e.replace(/[.*+?^=!:${}()|[\]\/\\]/g,"\\$&")},370:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Vscode=void 0;const s=r(17),i=r(496);t.Vscode=class{constructor(){const e=i.workspace.workspaceFolders;if(void 0===e)throw new Error("folder not open.");if(e.length>1)throw new Error("multiple folders open.");if(this.folder=e[0],!i.window.activeTextEditor)throw new Error("no active editor.");this.editor=i.window.activeTextEditor}async exists(e){try{await i.workspace.fs.stat(e)}catch(e){if(e instanceof i.FileSystemError&&"FileNotFound"===e.code)return!1;throw e}return!0}getOpenedFilename(){return this.editor.document.fileName.replace(`${this.folder.uri.path}${s.sep}`,"")}getPrettierignoreUri(){const e=this.folder.uri;return e.with({path:s.posix.join(e.path,".prettierignore")})}async readFile(e){const t=await i.workspace.fs.readFile(e);return Buffer.from(t).toString("utf8")}writeFile(e,t){return i.workspace.fs.writeFile(e,Buffer.from(t,"utf8"))}deleteFile(e){return i.workspace.fs.delete(e)}}},496:e=>{e.exports=require("vscode")},37:e=>{e.exports=require("os")},17:e=>{e.exports=require("path")}},t={};function r(s){var i=t[s];if(void 0!==i)return i.exports;var o=t[s]={exports:{}};return e[s](o,o.exports,r),o.exports}var s={};(()=>{var e=s;Object.defineProperty(e,"__esModule",{value:!0}),e.activate=void 0;const t=r(496),i=r(49),o=r(519);e.activate=async function(e){console.log('Extension "vscode-ignore-prettier" is activated.');const r=new o.ToggleStatusBarItem;r.show();const s=t.commands.registerCommand("ignoreprettier.add",(0,i.addFunc)(r)),a=t.commands.registerCommand("ignoreprettier.remove",(0,i.removeFunc)(r)),n=t.commands.registerCommand("ignoreprettier.toggle",(0,i.toggleFunc)(r)),c=t.window.onDidChangeActiveTextEditor((async e=>{e&&r.setText()}));e.subscriptions.push(r.getItem()),e.subscriptions.push(s,a,n),e.subscriptions.push(c)}})(),module.exports=s})();